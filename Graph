#include<stdio.h>
#include<stdlib.h>

typedef struct Graph{
    
    struct graphnode * head;

}Graph;

typedef struct graphnode{
    
    int data;
    struct graphnode * vertexpointer;
    struct graphnode * edgepointer;
    
}graphnode;

Graph * creategraph(){
    
    Graph * graph;
    graph = (Graph*)malloc(sizeof(Graph));
    graph->head = NULL;
    return graph;
    
}

graphnode * isEmpty(graphnode * vertex1, graphnode * vertex){
   
    if(vertex1 == NULL){
        
        return vertex;
    }
    return vertex1;
}

graphnode * findposition(graphnode * vertex, int number){
    
    while(vertex->data != number){
        
        vertex = vertex->vertexpointer;
    }
    return vertex;
}

void insert(graphnode * vertex1, graphnode * vertex){
    
    if(vertex1 == vertex){
	
	return;
    }

    while(vertex1->vertexpointer != NULL){
        
        vertex1 = vertex1->vertexpointer;
    }
    vertex1->vertexpointer = vertex;
}

graphnode * createvertex(int number){
    
    graphnode * vertex;
    vertex = (graphnode*)malloc(sizeof(graphnode));
    vertex->data = number;
    vertex->vertexpointer = NULL;
    vertex->edgepointer = NULL;
    return vertex;

}

void createedge(graphnode * vertex, int number1, int number2){
    
    graphnode * vertex1, * vertex2, * vertex3;
    vertex1 = findposition(vertex, number1);
    vertex2 = findposition(vertex, number2);
    vertex3 = createvertex(number2);

    while(vertex1->edgepointer != NULL){
        
        vertex1 = vertex1->edgepointer;
    }
    vertex1->edgepointer = vertex3;
    vertex3->vertexpointer = vertex2;
     
}

void VertexSearch(graphnode * vertex){
    
    while(vertex->vertexpointer != NULL){
        
        printf("%d\n", vertex->data);
        vertex = vertex->vertexpointer;
    }
    printf("%d\n", vertex->data);
}

void EdgeSearch(graphnode * vertex){
    
    graphnode * temp;
    temp = vertex;
    vertex = vertex->edgepointer;
    
    if(vertex == NULL){
        
        return;
    }
    
    while(vertex->edgepointer != NULL){
        
        printf("%d-", temp->data); 
        printf("%d\n", vertex->data);
        vertex = vertex->edgepointer;
    }
    printf("%d-", temp->data);
    printf("%d\n", vertex->data);
    EdgeSearch(temp->vertexpointer);
    
}

int main(){
    
    Graph * graph;
    graphnode * vertex;
    graph = creategraph();
    vertex = createvertex(1);
    graph->head = isEmpty(graph->head, vertex);
    insert(graph->head, vertex);
    vertex = createvertex(2);
    insert(graph->head, vertex);
    vertex = createvertex(3);
    insert(graph->head, vertex);
    vertex = createvertex(4);
    insert(graph->head, vertex);
    vertex = createvertex(5);
    insert(graph->head, vertex);
    vertex = createvertex(6);
    insert(graph->head, vertex);
    VertexSearch(graph->head);
    createedge(graph->head, 1, 2);
    createedge(graph->head, 2, 3);
    createedge(graph->head, 3, 4);
    createedge(graph->head, 4, 5);
    createedge(graph->head, 3, 5);
    createedge(graph->head, 2, 5);
    createedge(graph->head, 5, 6);
    EdgeSearch(graph->head);
    return 0;
   
}
